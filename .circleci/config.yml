version: 2.1
executors:
  default:
    working_directory: ~/es_sample
    docker:
      - image: yamashun/ruby:2.5.3
        environment:
          RAILS_DATABASE_PASSWORD: ''
          RAILS_DATABASE_HOST: 127.0.0.1
          BUNDLE_GEMFILE: /root/es_sample/Gemfile
          BUNDLE_PATH: /root/es_sample/vendor/bundle/ruby/2.5.0
          ELASTICSEARCH_HOST: 127.0.0.1:9200
      - image: mysql:5.7
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD=true
          MYSQL_USER=root
          MYSQL_DATABASE=rails_es_sample_test
      - image: yamashun/es
        environment:
          http.host: '0.0.0.0'
          http.port: 9200
          cluster.name: docker-cluster
          xpack.security.enabled: false
          ES_JAVA_OPTS: '-Xms256m -Xmx256m'
commands:
  echo:
    parameters:
      val:
        type: string
    steps:
      - when:
          condition: ${TEST_ENV_VAR}
          steps:
            - run: echo << parameters.val >>
      - unless:
          condition: ${TEST_ENV_VAR}
          steps:
            - run: echo 'empty value'
  set-git-log:
    steps:
      - run:
          name: set env val
          command: |
            echo 'export TEST_ENV_VAR_READ=`git log -1 --oneline | grep ci_skip`' >> $BASH_ENV
jobs:
  checkout-code:
    executor:
      name: default
    steps:
      - checkout
      - restore_cache:
          keys:
            - gf-bundle-1-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gf-bundle-1-{{ .Branch }}-
            - gf-bundle-1-
      - run:
          name: Bundle install
          command: bin/bundle install --path=./vendor/bundle
      - save_cache:
          key: gf-bundle-1-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle
      - persist_to_workspace:
          root: .
          paths: .
  rspec-test:
    executor:
      name: default
    steps:
      - attach_workspace:
          at: ~/es_sample
      - run:
          name: Bundle install
          command: bin/bundle install --path ./vendor/bundle
      - run:
          name: Database Setup
          command: |
            sleep 10
            bundle exec rake db:create RAILS_ENV=test
            bundle exec rake db:schema:load RAILS_ENV=test
      - run:
          name: Rspec test
          command: bundle exec rspec --format progress --color
  test_job:
    parameters:
      param_test:
        type: string
    executor:
      name: default
    steps:
      - attach_workspace:
          at: ~/es_sample
      - run:
          name: set env var
          command: |
            echo 'export TEST_ENV_VAR=`git log -1 --oneline | grep ci_skip`' >> $BASH_ENV
      - echo:
          val: ${TEST_ENV_VAR}
  env_test:
    parameters:
      env_var:
        type: string
    executor:
      name: default
    steps:
      - when:
          condition: <<parameters.env_var>>
          steps:
            - run: echo 'not empty value'
            - run: echo <<parameters.env_var>>
      - unless:
          condition: <<parameters.env_var>>
          steps:
            - run: echo 'empty value'
            - run: echo <<parameters.env_var>>
  master_only:
    executor:
      name: default
    steps:
      - attach_workspace:
          at: ~/es_sample
      - run:
          name: test_step
          command: |
            git log -1 --oneline | grep ci_skip
            if [ $? -ne 0 ]; then
              echo 'test step is executed!!'
            else
              echo "test setp is skipped!!"
            fi

workflows:
  es-ci:
    jobs:
      - checkout-code
      - rspec-test:
          requires:
            - checkout-code
      - test_job:
          requires:
            - checkout-code
          param_test: test1
      - test_job:
          requires:
            - checkout-code
          param_test: test2
          filters:
            branches:
              only:
                - master
      - env_test:
          pre-steps:
            - attach_workspace:
                at: ~/es_sample
            - set-git-log
          requires:
            - rspec-test
          env_var: TEST_ENV_VAR_READ
      - master_only:
          requires:
            - rspec-test
          filters:
            branches:
              only:
                - ci_test_master
